def hamming_distance(seqs):
    seq = seqs.split('/n')
    print(seq)
    count = 0
    for i in range(len(seq[0])):
        if seq[0][i] != seq[1][i]:
            count += 1
    print(count)

#example
hamming_distance("GAGCCTACTAACGGGAT/nCATCGTAATGACGGCCT")

hamming_distance("GAGGATGCATGAAGTTAAGCTAGCGTTTGCGGTTGTCCCGTCCAGGAGAGTCGGCCCAGTCTTATTAGGATGTTAGGCGTATCATCCGAGGCAGCCGCTACGGTACGCGTCGTATCGGCCCTAACTGGGCCTATCTGAAGTGAGATGGCTGCTAGTGGGTCATCAGAGGTGATTTCTGTCTTAGTTTTGAAACAATACCCCTATCATTTCGAAGAAAAATCATCCATACCAACTAATATGCATCGACACTGGCAACTCCATATATGCAGGTCATCTCTCTTGTACTCTCTGAAACTGACTCGGCACATGCCACGGGATCGGAGCGCCTGTATTGCGTTTTCACTAATGGGTTTAGATACAACGGTACTTCGAGTGACGTTACGGGATACCCTCAAGGACGTTCTACTGGACTGCGGCCTTGTCGTGGTCGAATACCCGTTACTGTGCTTAAGAATCCCATTTGCCTAGGACAGGGCACTTTTCCACTCCTAATTAACCCCTACTAGGCGAATAACTTTCCACAGAACCGTAGGGGGCCATACTGAGTTTTCGGACGTGAACGGCTGAGAAAGGCCGACTCTACAGCACCCCTGCGAGCGGAGAAGGAAAAGCTACTACTATTGGGTTCATGACGTACAGGACTTCTGTGTCGAGACTCGTCTGATATAGAGCGTTCACAGATTCCCTGACACCAAACAGAAACCAGTCCCCGGAAACAATCCGTGACTATAATGTATGGGTAGATGCGCGTCGCGAAAGAACGCCTATTTACCGTCTCCGTTTGGGTGGAGACTAGAGCGACCCCGGATTAAGCTGGAGCCGAGGCACTACTCGCTGCAAAACGGAGCTGAGGAGTGAGATCTGGTACTTGTGCGCTCTTACACTGGAAACGACTTCATGGCCGGGTGCGGGGTACCGGATGCGTGAGAGGTACTGGCTTATATGTCCCAACGCAGG/nCTGTACGCGTAACTATAAGCTATCGTTCACTGTTGCTAGGACCGGAATCTGCTGTGTAGTCTCACTAGTACGCATTTCGTGCCATAAGAAAAAGTCGCTATTTGACGCGCCGAGCTAATCGCAACTTGGCCGATCTGCCGTCAGATGGTTGCTCATGTTTCACAGTCTCCCACTTCTGCGATAGGAATTAAAGACTAGTATAACCTTTGAGAGGACTAGTATATGTACCTAGCCCATCTTATTCGAGCATATCAGCTCATTCCATGAAGTAATTCATTTTCTAGCTTTATGTGCTCTAAACGCCTACTTCCCCGTAATCGGGTCCCCAGAGGTCTCCGATCTGGGGCGGTTTTTGCGACATCCGTCACACGTGCGTGGTTCGTAGATAGTCTCAAAATCCTTTCATGTAATTACGCCGTCATGGTGGGATCATACCAAGTGGTAATAAATGGAATCGTGCATGCTTACACCGAGGCAGGTTATTGACCTTAAGCAATCCCTACTATGCCGATAAGTATCTAGGGACCCGCCGGGGTCCATATCCGGTTGTTTGATCGGATAGCTGGAGAAAGCGAACTTGTACCACCCCCAGAATTGCCGATTAGCAAAGGGAAGTGCAATGGGGCACCTGACATATAGTACTTCGTAGTCTGGTCAAGACGGAAATGGCTTTTAGAAAGTGACTGTGCTCCTAATCCGAAACTACTACAACAGTGCCCGACGCAGGAGGACTGGCGGCCTGGATATGCGTCGCGAAAGCTTGCATACTTGGACGCTAGCATTGTGTTGAGAGGCCGTGGACCTCGAGGTACTATTTAACGCGAGGAATACCGGCTGCCAAGCCTATGTGTAAGGCTGTATGTGGTACGTCCGTGCTGGAATGCAGGTGCACATGAAACGTCCGGGCTTGGGAAGACGGAGGTGTGGGACATGATGGGAGATATGACCAGACGAACG")